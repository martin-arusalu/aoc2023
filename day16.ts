// replaced all / with //
const real =
  `\\.........../../..\\.\\.\\................|..-...\\........./.......-.....................-...\\...--....../..\\....
........|............|............-.........|....\\.................\\-.........../...../....-../....\\..........
.-....................\\\\..................|.\\..........\\.........../.............................-...-........
............-.....\\/...........-........-......................-..-...../...............|................/....
.......\\....-...-...............|.............-...................../....-../............./\\..........-..\\....
..................-.............\\.........\\........-......./..../..|....|......-/............\\.............\\..
-...............|.........\\........../.\\........../......./-..........-...-.....-............................|
.\\\\...\\..........-............./...-|...................../.......-.................-....../.........|........
..................../........................./..\\...................\\.................-/......./.............
../...................|...../.-..................-.....|....-.|....................../.../\\....-....|..\\..|.\\.
..................|..................................-....|.........\\................................./.......
.........-...........-........\\..|-...................--.............-.../......./....................\\..-....
-..........-.................\\.....|......|.\\................|../..........\\.........\\.|.............-....\\...
......./....-....|....-..........|........-...-....-.....-............................................/../....
.......\\...........|.......\\....\\.//\\.............\\...../|....-...../..|....-................/................
.........\\........./............\\.-.|......./..........................|....\\........-.-.............../..|-.|
.............................\\......|....-../.....\\.....-..../.........................\\......|....../...\\/...
.../.\\.........../................................./.\\.\\...............\\..............\\.....|........-........
..................\\......-......|..................\\................................/.../.|...................
...\\\\............................\\./................../............................-.......-..|...............
/.............\\...-....\\...//..-..\\....-......-.\\............../.....|../.........|..../........\\......\\......
./..........-.........\\..-.................-.|...........\\.......-.......|...................|../.............
.....-./.\\..../.|.............../...........|..../....\\...\\/..-.........|....-.........|......................
...../.|.............../.....................\\\\../...|........\\........./|-...........\\/./.\\\\.................
..............\\...-..............\\.|......./........-...............-.-...|..\\......-./..........-.......|../.
.....|...............\\....|............../................./....../...-........-.....|........\\.........||../|
.../................................../...............-......................................../.......-......
......../.........|..../...............|...../..|................./............|.../.....|....|..\\........-...
.../................................//-.......\\........./......../....-.....-....-............................
........../....................|................................./.-......|.....\\........-..............|..|..
........|...-............|.\\.../.......................\\...\\../...........|../\\.\\-..../|\\..|-...\\......\\....-.
...-.\\..../.....||.....\\./.-.....\\..............-.......\\.../...-....|......\\...........-.....-....../........
...|-...|..........\\.........../.......................-....../...............\\.......\\.....|.................
....\\..../\\\\..........-........\\............................/...........|.........|......|.|...........|...|..
.............\\............................../....|..\\.\\..../....................\\..|...|..-............\\....-.
.-/|./...\\....-\\....-...\\...............-.../............-..../.--............................|||.............
....../../\\\\...|..-.................\\.............../.|\\/............................../.........\\.....|......
..../....................\\..................../......\\............-//.........................................
.............\\..../........../........-..............................|...-/....../..|....|.......-......../...
................-.|..\\../...|.\\..|..-.....-..../...................\\..............\\........................./.
........................../......\\...............................-..../......................-...........-....
........\\.-......................./...............\\..............................\\...../...................\\..
..............................\\..|..............|\\.-..-....-..|..../.........\\.............../.-..............
..........................\\\\./|.........\\|\\..............\\......./.......-.-...................\\.......-......
.............|.........-..\\..................|......-..|.-|.................--..||............-.|.............
..............\\..\\.\\.\\.........-./....../\\../|../.......................\\-.....\\....|.........................
.............................|.........\\.....|..............................|.......././-.../.........-./....|
\\.....................\\.../..................................-......./........../..\\.\\.................|......
...............-......................../.....................................................................
..../........./........-.....|................/../....\\.........../../.././........./......................-..
.......\\................/............................................\\........../..\\.\\......|/|\\..............
...........\\.............................\\\\......\\\\..|..-\\................../.-.....................-.........
........|../..\\...............|......./.................................|......|./....../......-..............
........./................\\.............|...............-.........-.....\\.............../.\\..........|........
.........................|......./....................-......|........\\.........................|/............
.\\..-.......................................-....|.................................|\\./.\\.....................
\\../................................-.-.....-..................../....../......../\\...|..|......../.......\\...
........................../..............\\|............./..../.................../...\\....\\/..................
../-.........................\\...\\......\\......................|.......\\..\\...\\...\\.................-..|....\\.
....-...................\\......-........../......../...............|................................/.........
.................................../......|.......|......................................|..\\........-........
......|..|....-..................\\./.............../.|...............|.|/.......\\.\\...........................
...............|...........|.....\\................................................|................\\.....|....
......../...|......../.................../../...........|...|............./.............\\..|.../........-.....
.....................-............\\...|..........|...-..........|..-..../...-...../......|....................
...\\.......\\.....-..................................|/.....\\......|.....................|.......|......./.-...
.....................|........./...............|.-...........\\........|......|...-/............../.-..........
......./....../.......-....-..............\\../\\.......\\................................................|......
................../.......\\\\.......................|...\\........|...\\........-....\\..-..........\\...../..-....
...............................................-.........................\\................\\............../..\\.
....|......../.........\\.........-../....-....................\\..................|............................
................./.-../\\..........-.....|.........\\.........\\..../.............................|........--/...
................|./...............|.......\\....-\\........-.....................-.....|..................../-..
...........\\........................|../...-./......\\...............\\........-./......|.................|..\\..
.......|-....../...........|..........|............/.............../.|....../...................\\.............
...../...../..........|.......................|....................|.........\\|............................\\..
........-........\\......./....\\.............//................................./......./...................|..
..-......../...................-...../.........-...................|..........................\\....../.-......
./............................\\...............................|............|...../.|................|.........
......\\................|.............................-.........\\.................................../-........\\
./-/..........|.................................../........\\....\\.....\\.....................\\.\\.........|.....
.-............../../........./.........-......\\.....................\\..\\..\\..\\/......-./.../....|.............
.....|..................-...\\||.......\\./../........................-.........................-..........\\....
...-................/.|........-....................................|..\\....-...\\......-..|............/......
..........\\...............|.|...-.............-.././...................../.../................................
.......\\./............./........../..\\............\\............-\\......|......|....|.........../|.............
............\\....|...........|...............-........\\..|\\..-.....-...|....................\\..../.......-....
........\\.....\\...................|......./......-........./....\\-...................|................\\....-..
../......................../................-...|..........\\........../...................................|.\\.
.....................-..../......../........./........./.........\\.......|/-...........|.........\\...../...../
......//..................\\.|....|..|..\\...\\-........./...........\\............/..................|...-.....\\.
.....-..-....../..................\\....\\........................|......................../....|........\\..|.\\.
.........-............\\..............\\..\\.\\../............................\\..-...-................./-.........
....|./..........\\..-.................\\..\\...../.\\...................-................/............|...../....
...\\.................../.....-...../.-.././....-/......|..................|................/.............-....
.....\\.||.................\\................\\..|.....|.............\\.\\-.............-................./........
.......\\..........\\....................|................/..............|.../..................\\...-.-.||......
.....-./..\\.\\.........................................|......./.............../....|..|.......-........\\...\\..
.....|............./.....-...................|.\\..../-............\\.........................-................\\
........\\/............./......\\......|-...|................../.....|-......................./..............\\-.
..............-..../.....-..........||.-.....-.../................././.../............\\/................./../.
-.....................................|.........-.....|...................|..................../.../..........
.......................-..|................/...........\\...........................|.--.....\\..........|/..-..
...............\\..................../..../.|..........................|.....................|..\\...\\....--....
....../.......-...............................|....../.........\\.-........../.....................\\.--...-....
.-......\\............/...-........|.....\\........../|........................|..........\\...|....../-.........
/............................../.....................................\\........../|........-...............\\..-
.........\\........\\.|.|\\..\\.....-..............-.........-...........|........|...|...........-.............||
.-\\................\\.......|...................................../..................-.-.....|...\\..\\.|........
\\............-/../.......|............./......\\\\.\\./.|......-/.\\.\\.............\\........./|\\.....-............`;
const test = `.|...\\....
|.-.\\.....
.....|-...
........|.
..........
.........\\
..../.\\\\..
.-.-/..|..
.|....-|.\\
..//.|....`;

function format(input: string) {
  return input.split("\n");
}

function part1(input: string) {
  console.time("part1");
  let result = 0;

  const data = format(input);
  const beamPaths: string[] = [];
  const energized = new Set<string>();

  function move(
    curRow: number,
    curCol: number,
    dir: "u" | "d" | "r" | "l",
  ) {
    if (beamPaths.indexOf(`${curRow}:${curCol}:${dir}`) >= 0) return; // already done
    if (
      curRow >= 0 &&
      curRow <= data.length - 1 &&
      curCol >= 0 &&
      curCol <= data[curRow].length - 1
    ) {
      energized.add(`${curRow}:${curCol}`);
      beamPaths.push(`${curRow}:${curCol}:${dir}`);
      const currentTile = data[curRow].charAt(curCol);
      if (currentTile === ".") {
        if (dir === "r") move(curRow, curCol + 1, dir);
        if (dir === "l") move(curRow, curCol - 1, dir);
        if (dir === "d") move(curRow + 1, curCol, dir);
        if (dir === "u") move(curRow - 1, curCol, dir);
      }
      if (currentTile === "-") {
        if (dir === "l") move(curRow, curCol - 1, dir);
        else if (dir === "r") move(curRow, curCol + 1, dir);
        else {
          move(curRow, curCol - 1, "l");
          move(curRow, curCol + 1, "r");
        }
      }
      if (currentTile === "|") {
        if (dir === "u") move(curRow - 1, curCol, dir);
        else if (dir === "d") move(curRow + 1, curCol, dir);
        else {
          move(curRow - 1, curCol, "u");
          move(curRow + 1, curCol, "d");
        }
      }
      if (currentTile === "/") {
        if (dir === "u") move(curRow, curCol + 1, "r");
        if (dir === "d") move(curRow, curCol - 1, "l");
        if (dir === "l") move(curRow + 1, curCol, "d");
        if (dir === "r") move(curRow - 1, curCol, "u");
      }
      if (currentTile === "\\") {
        if (dir === "d") move(curRow, curCol + 1, "r");
        if (dir === "u") move(curRow, curCol - 1, "l");
        if (dir === "r") move(curRow + 1, curCol, "d");
        if (dir === "l") move(curRow - 1, curCol, "u");
      }
    }
  }

  move(0, 0, "r");

  result = energized.size;

  console.log(result);
  console.timeEnd("part1");
}

function part2(input: string) {
  console.time("part2");
  let result = 0;

  const data = format(input);
  let energized = new Set<string>();
  let beamPaths: string[] = [];
  let maxEnergized = 0;

  function move(
    curRow: number,
    curCol: number,
    dir: "u" | "d" | "r" | "l",
  ) {
    if (beamPaths.indexOf(`${curRow}:${curCol}:${dir}`) >= 0) return; // already done
    if (
      curRow >= 0 &&
      curRow <= data.length - 1 &&
      curCol >= 0 &&
      curCol <= data[curRow].length - 1
    ) {
      energized.add(`${curRow}:${curCol}`);
      beamPaths.push(`${curRow}:${curCol}:${dir}`);
      const currentTile = data[curRow].charAt(curCol);
      if (currentTile === ".") {
        if (dir === "r") move(curRow, curCol + 1, dir);
        if (dir === "l") move(curRow, curCol - 1, dir);
        if (dir === "d") move(curRow + 1, curCol, dir);
        if (dir === "u") move(curRow - 1, curCol, dir);
      }
      if (currentTile === "-") {
        if (dir === "l") move(curRow, curCol - 1, dir);
        else if (dir === "r") move(curRow, curCol + 1, dir);
        else {
          move(curRow, curCol - 1, "l");
          move(curRow, curCol + 1, "r");
        }
      }
      if (currentTile === "|") {
        if (dir === "u") move(curRow - 1, curCol, dir);
        else if (dir === "d") move(curRow + 1, curCol, dir);
        else {
          move(curRow - 1, curCol, "u");
          move(curRow + 1, curCol, "d");
        }
      }
      if (currentTile === "/") {
        if (dir === "u") move(curRow, curCol + 1, "r");
        if (dir === "d") move(curRow, curCol - 1, "l");
        if (dir === "l") move(curRow + 1, curCol, "d");
        if (dir === "r") move(curRow - 1, curCol, "u");
      }
      if (currentTile === "\\") {
        if (dir === "d") move(curRow, curCol + 1, "r");
        if (dir === "u") move(curRow, curCol - 1, "l");
        if (dir === "r") move(curRow + 1, curCol, "d");
        if (dir === "l") move(curRow - 1, curCol, "u");
      }
    }
  }

  for (let i = 0; i < data.length; i++) {
    energized = new Set<string>();
    beamPaths = [];

    move(0, i, "d");
    maxEnergized = Math.max(energized.size, maxEnergized);

    energized = new Set<string>();
    beamPaths = [];

    move(data.length - 1, i, "u");
    maxEnergized = Math.max(energized.size, maxEnergized);
  }

  for (let i = 0; i < data[0].length; i++) {
    energized = new Set<string>();
    beamPaths = [];

    move(i, 0, "r");
    maxEnergized = Math.max(energized.size, maxEnergized);

    energized = new Set<string>();
    beamPaths = [];

    move(i, data[0].length - 1, "l");
    maxEnergized = Math.max(energized.size, maxEnergized);
  }

  result = maxEnergized;

  console.log(result);
  console.timeEnd("part2");
}

part1(test);
part1(real);
part2(test);
part2(real);
